[gd_scene load_steps=3 format=3 uid="uid://bm2tpd5x76ox4"]

[ext_resource type="Script" uid="uid://bp117jqlwtxer" path="res://node_3d.gd" id="1_a202f"]

[sub_resource type="GDScript" id="GDScript_a202f"]
script/source = "extends XROrigin3D

func _ready():
	for hand in [\"left\", \"right\"]:
		# Create hand tracker
		var hand_tracker = XRNode3D.new()
		hand_tracker.name = hand.capitalize() + \"HandTracker\"
		hand_tracker.tracker = \"/user/hand_tracker/\" + hand
		hand_tracker.show_when_tracked = true
		add_child(hand_tracker)
		
		var hand_mesh = OpenXRFbHandTrackingMesh.new()
		hand_mesh.name = \"OpenXRFbHandTrackingMesh\"
		hand_mesh.hand = 0 if hand == \"left\" else 1
		hand_tracker.add_child(hand_mesh)
		
		var hand_modifier = XRHandModifier3D.new()
		hand_modifier.hand_tracker = \"/user/hand_tracker/\" + hand
		hand_mesh.add_child(hand_modifier)
		
		# Add index finger tip capsule
		create_finger_capsule(hand_tracker, hand)

func create_finger_capsule(hand_tracker: XRNode3D, hand_name: String):
	# Create a Node3D that will follow the index finger tip
	var finger_marker = Node3D.new()
	finger_marker.name = \"IndexFingerTipMarker\"
	hand_tracker.add_child(finger_marker)
	
	# Add XRHandModifier3D to make it follow the index finger tip joint
	var hand_modifier = XRHandModifier3D.new()
	hand_modifier.hand_tracker = \"/user/hand_tracker/\" + hand_name
	hand_modifier.bone_update = XRHandModifier3D.BONE_UPDATE_FULL
	hand_modifier.bone = XRHandTracker.HAND_JOINT_INDEX_FINGER_TIP  # Index finger tip
	finger_marker.add_child(hand_modifier)
	
	# Create the collision body
	var capsule_body = StaticBody3D.new()
	capsule_body.name = \"IndexFingerCapsule\"
	finger_marker.add_child(capsule_body)
	
	# Add collision shape
	var collision_shape = CollisionShape3D.new()
	var capsule_shape = CapsuleShape3D.new()
	capsule_shape.radius = 0.01  # 10mm radius
	capsule_shape.height = 0.03  # 30mm height
	collision_shape.shape = capsule_shape
	capsule_body.add_child(collision_shape)
	
	# Add visual mesh
	var mesh_instance = MeshInstance3D.new()
	var capsule_mesh = CapsuleMesh.new()
	capsule_mesh.radius = 0.01
	capsule_mesh.height = 0.03
	mesh_instance.mesh = capsule_mesh
	
	# Make it visible with a nice color
	var material = StandardMaterial3D.new()
	material.albedo_color = Color(1.0, 0.3, 0.3, 0.7)  # Semi-transparent red
	material.transparency = BaseMaterial3D.TRANSPARENCY_ALPHA
	mesh_instance.material_override = material
	
	capsule_body.add_child(mesh_instance)
"

[node name="Node3D" type="Node3D"]
script = ExtResource("1_a202f")

[node name="XROrigin3D" type="XROrigin3D" parent="."]
script = SubResource("GDScript_a202f")

[node name="XRCamera3D" type="XRCamera3D" parent="XROrigin3D"]
transform = Transform3D(1, 0, 0, 0, 0.953675, 0.30083895, 0, -0.30083895, 0.953675, 0, 0.8028079, 1.258544)
